<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="text" encoding="iso-8859-1"/>

<!--
CSV header (first line containing the column titles):
IP, TRACKING_METHOD, DNS, NETBIOS, LAST_SCAN_DATETIME, QID, TYPE, PORT, PROTOCOL, RESULTS, STATUS, SEVERITY, CVE, TITLE

Input file generated by curl -H 'X-Requested-With: curl' -u 'LOGIN:PASS' 'https://qualysapi.qualys.com/api/2.0/fo/asset/host/vm/detection/?action=list&show_igs=1' > detection.xml

xsltproc detection2csv.xsl detection.xml > detection-full.csv

the variable merge_with is the filename of the XML output of Qualys knowledgebase_download.php
-->

	<xsl:param name="delim" select="string(',')" />
	<xsl:param name="quote" select="string('&quot;')" />
	<xsl:param name="break" select="string('&#xD;')" />
	<xsl:param name="linefeed" select="string('&#10;')" />
	<xsl:param name="space" select="string('&#x20;')" />


	<xsl:template match="/">
		<xsl:text>"IP","TRACKING_METHOD","DNS","NETBIOS","LAST_SCAN_DATETIME","QID","TYPE","PORT","PROTOCOL","RESULTS","STATUS","LAST_FOUND","SEVERITY","CVE","TITLE"</xsl:text>
		<xsl:value-of select="$linefeed"/>
		<xsl:apply-templates select="HOST_LIST_VM_DETECTION_OUTPUT/RESPONSE/HOST_LIST/HOST/DETECTION_LIST/DETECTION"/>
	</xsl:template>

	<xsl:template match="DETECTION">

		<xsl:variable name="cur" select="current()" />
	
		<xsl:variable name="vuln"
				    select="document('./results/20140313/vulnkb-light.xml')/VULNS/VULN[QID=current()/QID]/." />
		
		<xsl:choose>
			<xsl:when test="$vuln/CVE_ID_LIST/CVE_ID">
<!-- if there is at least one CVE -->

				<xsl:for-each select="$vuln/CVE_ID_LIST/CVE_ID">

                                        <xsl:call-template name="display_csv_field">
                                                <xsl:with-param name="field" select="$cur/../../IP" />
                                        </xsl:call-template>
                                        <xsl:value-of select="$delim"/>

                                        <xsl:call-template name="display_csv_field">
                                                <xsl:with-param name="field" select="$cur/../../TRACKING_METHOD" />
                                        </xsl:call-template>
                                        <xsl:value-of select="$delim"/>

                                        <xsl:call-template name="display_csv_field">
                                                <xsl:with-param name="field" select="$cur/../../DNS" />
                                        </xsl:call-template>
                                        <xsl:value-of select="$delim"/>	
	
					<xsl:call-template name="display_csv_field">
						<xsl:with-param name="field" select="$cur/../../NETBIOS" />
					</xsl:call-template>
					<xsl:value-of select="$delim"/>
	
                                        <xsl:call-template name="display_csv_field">
                                                <xsl:with-param name="field" select="$cur/../../LAST_SCAN_DATETIME" />
                                        </xsl:call-template>
                                        <xsl:value-of select="$delim"/>
	
					<xsl:call-template name="display_csv_field">
						<xsl:with-param name="field" select="$cur/QID" />
					</xsl:call-template>
					<xsl:value-of select="$delim"/>

                                        <xsl:call-template name="display_csv_field">
                                                <xsl:with-param name="field" select="$cur/TYPE" />
                                        </xsl:call-template>
                                        <xsl:value-of select="$delim"/>

                                        <xsl:call-template name="display_csv_field">
                                                <xsl:with-param name="field" select="$cur/PORT" />
                                        </xsl:call-template>
                                        <xsl:value-of select="$delim"/>

                                        <xsl:call-template name="display_csv_field">
                                                <xsl:with-param name="field" select="$cur/PROTOCOL" />
                                        </xsl:call-template>
                                        <xsl:value-of select="$delim"/>


                                        <xsl:call-template name="display_csv_field">
                                                <xsl:with-param name="field" select="$cur/../../RESULTS" />
                                        </xsl:call-template>
                                        <xsl:value-of select="$delim"/>
			
					<xsl:call-template name="display_csv_field">
						<xsl:with-param name="field" select="$cur/STATUS" />
					</xsl:call-template>
					<xsl:value-of select="$delim"/>
					
					<xsl:call-template name="display_csv_field">
						<xsl:with-param name="field" select="$cur/LAST_FOUND_DATETIME" />
					</xsl:call-template>
					<xsl:value-of select="$delim"/>
		
					<xsl:call-template name="display_csv_field">
						<xsl:with-param name="field" select="$vuln/SEVERITY_LEVEL" />
					</xsl:call-template>
					<xsl:value-of select="$delim"/>

					<xsl:call-template name="display_csv_field">
						<xsl:with-param name="field" select="./ID"/>
					</xsl:call-template>
					<xsl:value-of select="$delim"/>
		
					<xsl:call-template name="display_csv_field">
						<xsl:with-param name="field" select="$vuln/TITLE" />
					</xsl:call-template>
											
					<xsl:value-of select="$linefeed" />
		
				</xsl:for-each>

			</xsl:when>
			
			<xsl:otherwise>
<!-- the QID doens't contain a CVE reference -->
                                <xsl:call-template name="display_csv_field">
                                        <xsl:with-param name="field" select="../../IP" />
                                </xsl:call-template>
                                <xsl:value-of select="$delim"/>

                                <xsl:call-template name="display_csv_field">
                                        <xsl:with-param name="field" select="../../TRACKING_METHOD" />
                                </xsl:call-template>
                                <xsl:value-of select="$delim"/>

                                <xsl:call-template name="display_csv_field">
                                        <xsl:with-param name="field" select="../../DNS" />
                                </xsl:call-template>
                                <xsl:value-of select="$delim"/>

				<xsl:call-template name="display_csv_field">
					<xsl:with-param name="field" select="../../NETBIOS" />
				</xsl:call-template>
				<xsl:value-of select="$delim"/>

                                <xsl:call-template name="display_csv_field">
                                        <xsl:with-param name="field" select="../../LAST_SCAN_DATETIME" />
                                </xsl:call-template>
                                <xsl:value-of select="$delim"/>
		
				<xsl:call-template name="display_csv_field">
					<xsl:with-param name="field" select="QID" />
				</xsl:call-template>
				<xsl:value-of select="$delim"/>

                                <xsl:call-template name="display_csv_field">
                                        <xsl:with-param name="field" select="TYPE" />
                                </xsl:call-template>
                                <xsl:value-of select="$delim"/>

                                <xsl:call-template name="display_csv_field">
                                        <xsl:with-param name="field" select="PORT" />
                                </xsl:call-template>
                                <xsl:value-of select="$delim"/>

                                <xsl:call-template name="display_csv_field">
                                        <xsl:with-param name="field" select="PROTOCOL" />
                                </xsl:call-template>
                                <xsl:value-of select="$delim"/>

	
                                <xsl:call-template name="display_csv_field">
                                        <xsl:with-param name="field" select="../../RESULTS" />
                                </xsl:call-template>
                                <xsl:value-of select="$delim"/>
	
				<xsl:call-template name="display_csv_field">
					<xsl:with-param name="field" select="STATUS" />
				</xsl:call-template>
				<xsl:value-of select="$delim"/>
				
				<xsl:call-template name="display_csv_field">
					<xsl:with-param name="field" select="LAST_FOUND_DATETIME" />
				</xsl:call-template>
				<xsl:value-of select="$delim"/>
		
				<xsl:call-template name="display_csv_field">
					<xsl:with-param name="field" select="$vuln/SEVERITY_LEVEL" />
				</xsl:call-template>
				<xsl:value-of select="$delim"/>
				
				<xsl:value-of select="$quote"/>
				<xsl:for-each select="$vuln/CVE_ID_LIST/CVE_ID">
					<xsl:value-of select="ID"/>
					<xsl:value-of select="$space"/>
				</xsl:for-each>
				<xsl:value-of select="$quote"/>
				<xsl:value-of select="$delim"/>
						
				<xsl:call-template name="display_csv_field">
					<xsl:with-param name="field" select="$vuln/TITLE" />
				</xsl:call-template>
				
				<xsl:value-of select="$linefeed" />
				
			</xsl:otherwise>

		</xsl:choose>
	
	</xsl:template>
		
  <!-- Template to escape csv field -->
	<xsl:template name="display_csv_field">
		<xsl:param name="field"/>
		<xsl:choose>
			<xsl:when test="contains($field,$quote)">
			<!-- Field contains a quote. We must enclose this field in quotes,
			and we must escape each of the quotes in the field value.
			-->
				<xsl:value-of select="$quote"/>
				<xsl:call-template name="escape_quotes">
					<xsl:with-param name="string" select="$field" />
				</xsl:call-template>
				<xsl:value-of select="$quote"/>
			</xsl:when>
			<xsl:when test="contains($field,',' ) or contains($field,$linefeed)">
			<!-- Field contains a comma and/or a linefeed.
			We must enclose this field in quotes.
			-->
				<xsl:value-of select="concat($quote,$field,$quote)"/>
			</xsl:when>
			<xsl:otherwise>
			<!-- No need to enclose this field in quotes.-->
				<xsl:value-of select="$field" />
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	
	<!-- Helper for escaping CSV field -->
	<xsl:template name="escape_quotes">
		<xsl:param name="string" />
		<xsl:value-of select="substring-before($string,$quote)" />
		<xsl:value-of select="$quote"/>
		<xsl:value-of select="$quote"/>
		<xsl:variable name="substring_after_first_quote" select="substring-after($string,$quote)" />
		<xsl:choose>
			<xsl:when test="not(contains($substring_after_first_quote,$quote))">
				<xsl:value-of select="$substring_after_first_quote" />
			</xsl:when>
			<xsl:otherwise>
			<!-- The substring after the first quote contains a quote.
			So, we call ourself recursively to escape the quotes
			in the substring after the first quote.
			-->
				<xsl:call-template name="escape_quotes">
					<xsl:with-param name="string" select="$substring_after_first_quote"/>
				</xsl:call-template>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
</xsl:stylesheet>
