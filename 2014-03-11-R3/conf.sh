#! /bin/bash
# This file is used to create the variables that are used by the various shell scripts

# Within some shells is is necessary to echo settings to variables as shown for
# APIFQDN.  If execution issues are encountered, try updating variables not set 
# by commands currently to use this method.

# Script assumes username and password as sent as $1 and $2 CLI ars
# to INSECURELY store credentials and hard code instead uncomment the following 
# Replace <username> with your qualysguard username
#USERNAME=<username>

# Replace <password> with your qualysguard password
#PASSWORD=<password>
#echo $PASSWORD

# for debugging uncomment
#echo USERNAME = $USERNAME
#echo PASSWORD = $PASSWORD

#------------------------------------------------------
# Uncomment ONE APIFQDN according to your QualysGuard POD assignment
# Not working?	Check the FQDN for your POD in the current API Users Guide
#
# US POD1 API
APIFQDN=`echo qualysapi.qualys.com`
#
# US POD2 API
#APIFQDN=`echo qualysapi.qg2.apps.qualys.com`
#
# EU POD API
#APIFQDN=`echo qualysapi.qualys.eu`
#
# QualysGuard @Customer API
#APIFQDN=`echo qualysapi.<customer_base_url>`
# @Customer APIs must replace <customer_base_url> with domain name info
echo APIFQDN = $APIFQDN
#-------------------------------------------------------

# Specify CURL connection support parameters
#
# IMPORTANT!  if you HAVE NOT generated your own ca-bundle.crt using CURL
# documentation you ARE NOT using strong encryption and you CANNOT do so! 
# SEE INSTALLATION_README.txt for more infomration
#
# CURL with default behaviors - weak encryption allowed and permit all SSL/TLS versions
CURL=`echo curl`
#
########################################
#### ENABEL STRONG ENCRYPTION HERE #####
########################################
# CURL with SSLv3 only, IPv4 only, a trusted root CA bundle, RC4-SHA or AES-256-SHA only
# Unomment below RECOMENDED, but NOT defaultD!!!
# CURL=`echo curl -3 -4 --cacert ca-bundle.crt --ciphers RC4-SHA,AES256-SHA`
#
# These variables do not need to be edited 
OUTPUTDIR="./results"
DATEPREFIX=`date '+%Y%m%d'`
echo OUTPUTDIR = $OUTPUTDIR
echo DATEPREFIX = $DATEPREFIX
# Set the following parameter to the date of the last run of the script in order to get a differential update of the hots
# Using the detection API, it will download all the vulnerabilities (according to the filters) for the hosts that changed
# since the last run/call
# For informtaion, the detection api parameter is: vm_scan_since=yyyy-mm-dd[Thh-mm-ssZ]
# WARNING: For the first execution of the script, in order to do a full download, this variable MUST BE EMPTY
#LAST_CALL_DATE="&vm_scan_since=2011-08-01"
LAST_CALL_DATE=""
echo LAST_CALL_DATE = $LAST_CALL_DATE
